Note: 

>>>>Click on project select 'Build Automatically' option
>>>>Windows preferences Java>editor>typing-> select escape text when pasting option

Required dependencies(Jars): 1.Rest-assured 2.TestNG 3.Hamcrest (TestNG & Hamcrest for validations purpose)
                             4.Jackson Data bind and GSON (for serialization, de-serialization)

Path parameters:
https://amazon.com/orders/112 
--> BaseURL "https://amazon.com/",Resource untill "orders" & sub-resource(point specific resource with in a collection) untill "112".
--> Path parameters "Resource & sub-resource"

Query parameters:
https://amazon.com/orders?sort_by=14/5/2023  (after ? parameter name[sort_by] = parameter value[14/5/2023]) (Each query is separated by ampersand[&])
--> sort/filter the resources   Ex: based on ID we can filter

End Point Request URL can be constructed as below
BaseURL/resource/(Path/Query)Parameters

>>>>>>Body(request/response) --> payload method or with File .JSON (maintain body in files) we can access and by serialization, deserialization

OnlineJsonEditor:
https://jsoneditoronline.org/
Practice & prepare 'complexJsonParse.java' 
Parse JSON using Json object and serialization and deserialization by create POJO classes 
================================================================================================================================
Serialization: in rest assured context is a process of converting Java object into request body(Payload)
Deserialization: It is a process of converting response body back to Java object

Advantages: 
Easy to parse(analyze or explain) and extract response(JSON/XML) values if they are wrapped(covered) as Java object.
User friendly methods can be created which makes code more reusable.

Designed Approach:
Java object is constructed with the support of POJO classes, POJO classes are created based on the request/response payload. 
==================================================================================================================================
Request & Response spec builder:
What ever the comman code we will make one RequestSpecBuilder(class)(return type 'RequestSpecification') then we will reuse entire project.
Ex:BaseURL, QueryParameters and any headers   in  response like status code any Headers 
==================================================================================================================================
End to end flow with Auth Token(Ecommerce API contract):
URL: https://rahulshettyacademy.com/client 
     UN: arahaman4770@gmail.com	
     PW: Rest@2023
 >>> While click on login go to the Network Tab > Fetch/XHR(so api calls filtered out)  
 Note: To send an attachment make sure though only form-data(Body--> Eighther though Json or Form-Data )  
==================================================================================================================================




Authorization Grant Type:???????(know theory)

            
Road map: 18, 19, 20, 21 & 22 write and execute
          section 7, 9, 10, 11, 12, 13, 14
          section 17(complete FW), 19
          Last section 21(if you have time)
